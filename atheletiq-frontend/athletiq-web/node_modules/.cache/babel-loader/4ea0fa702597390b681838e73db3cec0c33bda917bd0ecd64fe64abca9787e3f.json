{"ast":null,"code":"var _jsxFileName = \"E:\\\\Athletiq Project\\\\atheletiq-frontend\\\\athletiq-web\\\\src\\\\pages\\\\SchoolRegistrationWizard.js\",\n  _s = $RefreshSig$();\n// src/pages/SchoolRegistrationWizard.js\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { AnimatePresence, motion } from \"framer-motion\";\n\n// Wizard steps (adjust paths as needed)\nimport StepWelcome from \"../components/registration/steps/StepWelcome\";\nimport SchooladdressGoogle from \"../components/registration/steps/SchoolAddressGoogle\";\nimport StepSchoolType from \"../components/registration/steps/StepSchoolType\";\nimport StepContactInfo from \"../components/registration/steps/StepContactInfo\";\nimport StepUploads from \"../components/registration/steps/StepUploads\";\nimport StepAdminInfo from \"../components/registration/steps/StepAdminInfo\";\nimport StepReviewSubmit from \"../components/registration/steps/StepReviewSubmit\";\nimport StepSuccess from \"../components/registration/steps/StepSuccess\";\n\n// List your steps here in order:\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst steps = [StepWelcome, SchoolSearchGoogle, StepSchoolType, StepContactInfo, StepUploads, StepAdminInfo, StepReviewSubmit, StepSuccess];\nexport default function SchoolRegistrationWizard() {\n  _s();\n  // Registration data state\n  const [data, setData] = useState({\n    schoolName: \"\",\n    address: \"\",\n    country: \"\",\n    state: \"\",\n    city: \"\",\n    postalCode: \"\",\n    lat: \"\",\n    lng: \"\",\n    schoolType: \"\",\n    mobile: \"\",\n    landline: \"\",\n    email: \"\",\n    schoolLogo: null,\n    officialDoc: null,\n    adminName: \"\",\n    adminEmail: \"\",\n    adminPassword: \"\"\n  });\n\n  // Wizard progress step\n  const [step, setStep] = useState(0);\n\n  // Submission handler for the Review/Submit step\n  const handleSubmit = async () => {\n    try {\n      // Prepare form data for API (files + fields)\n      const formData = new FormData();\n      Object.entries(data).forEach(([key, value]) => {\n        if (value !== null && value !== undefined) {\n          formData.append(key, value);\n        }\n      });\n\n      // API call to backend (adjust URL as needed)\n      await axios.post(\"http://localhost:5000/api/schools/register\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      setStep(steps.length - 1); // Go to StepSuccess\n    } catch (error) {\n      var _error$response, _error$response$data;\n      alert(\"Registration failed: \" + (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message));\n    }\n  };\n\n  // Render the current step with transition\n  const StepComponent = steps[step];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-md mx-auto mt-10 bg-white shadow-xl rounded-2xl p-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-2 justify-center mb-6\",\n      children: steps.slice(0, -1).map((_, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `inline-block w-3 h-3 rounded-full ${i === step ? \"bg-blue-500\" : \"bg-gray-300\"}`\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      mode: \"wait\",\n      initial: false,\n      children: /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          x: 40\n        },\n        animate: {\n          opacity: 1,\n          x: 0\n        },\n        exit: {\n          opacity: 0,\n          x: -40\n        },\n        transition: {\n          duration: 0.4\n        },\n        children: /*#__PURE__*/_jsxDEV(StepComponent, {\n          data: data,\n          updateData: updates => setData(prev => ({\n            ...prev,\n            ...updates\n          })),\n          next: () => setStep(step + 1),\n          back: () => setStep(Math.max(0, step - 1)),\n          onSubmit: handleSubmit // Only StepReviewSubmit uses this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, step, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(SchoolRegistrationWizard, \"b/v5yYFPtQ2u04CG3ntWuZrQCec=\");\n_c = SchoolRegistrationWizard;\nvar _c;\n$RefreshReg$(_c, \"SchoolRegistrationWizard\");","map":{"version":3,"names":["React","useState","axios","AnimatePresence","motion","StepWelcome","SchooladdressGoogle","StepSchoolType","StepContactInfo","StepUploads","StepAdminInfo","StepReviewSubmit","StepSuccess","jsxDEV","_jsxDEV","steps","SchoolSearchGoogle","SchoolRegistrationWizard","_s","data","setData","schoolName","address","country","state","city","postalCode","lat","lng","schoolType","mobile","landline","email","schoolLogo","officialDoc","adminName","adminEmail","adminPassword","step","setStep","handleSubmit","formData","FormData","Object","entries","forEach","key","value","undefined","append","post","headers","length","error","_error$response","_error$response$data","alert","response","message","StepComponent","className","children","slice","map","_","i","fileName","_jsxFileName","lineNumber","columnNumber","mode","initial","div","opacity","x","animate","exit","transition","duration","updateData","updates","prev","next","back","Math","max","onSubmit","_c","$RefreshReg$"],"sources":["E:/Athletiq Project/atheletiq-frontend/athletiq-web/src/pages/SchoolRegistrationWizard.js"],"sourcesContent":["// src/pages/SchoolRegistrationWizard.js\r\n\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\n\r\n// Wizard steps (adjust paths as needed)\r\nimport StepWelcome from \"../components/registration/steps/StepWelcome\";\r\nimport SchooladdressGoogle from \"../components/registration/steps/SchoolAddressGoogle\";\r\nimport StepSchoolType from \"../components/registration/steps/StepSchoolType\";\r\nimport StepContactInfo from \"../components/registration/steps/StepContactInfo\";\r\nimport StepUploads from \"../components/registration/steps/StepUploads\";\r\nimport StepAdminInfo from \"../components/registration/steps/StepAdminInfo\";\r\nimport StepReviewSubmit from \"../components/registration/steps/StepReviewSubmit\";\r\nimport StepSuccess from \"../components/registration/steps/StepSuccess\";\r\n\r\n// List your steps here in order:\r\nconst steps = [\r\n  StepWelcome,\r\n  SchoolSearchGoogle,\r\n  StepSchoolType,\r\n  StepContactInfo,\r\n  StepUploads,\r\n  StepAdminInfo,\r\n  StepReviewSubmit,\r\n  StepSuccess\r\n];\r\n\r\nexport default function SchoolRegistrationWizard() {\r\n  // Registration data state\r\n  const [data, setData] = useState({\r\n    schoolName: \"\",\r\n    address: \"\",\r\n    country: \"\",\r\n    state: \"\",\r\n    city: \"\",\r\n    postalCode: \"\",\r\n    lat: \"\",\r\n    lng: \"\",\r\n    schoolType: \"\",\r\n    mobile: \"\",\r\n    landline: \"\",\r\n    email: \"\",\r\n    schoolLogo: null,\r\n    officialDoc: null,\r\n    adminName: \"\",\r\n    adminEmail: \"\",\r\n    adminPassword: \"\"\r\n  });\r\n\r\n  // Wizard progress step\r\n  const [step, setStep] = useState(0);\r\n\r\n  // Submission handler for the Review/Submit step\r\n  const handleSubmit = async () => {\r\n    try {\r\n      // Prepare form data for API (files + fields)\r\n      const formData = new FormData();\r\n      Object.entries(data).forEach(([key, value]) => {\r\n        if (value !== null && value !== undefined) {\r\n          formData.append(key, value);\r\n        }\r\n      });\r\n\r\n      // API call to backend (adjust URL as needed)\r\n      await axios.post(\r\n        \"http://localhost:5000/api/schools/register\",\r\n        formData,\r\n        { headers: { \"Content-Type\": \"multipart/form-data\" } }\r\n      );\r\n\r\n      setStep(steps.length - 1); // Go to StepSuccess\r\n    } catch (error) {\r\n      alert(\"Registration failed: \" + (error.response?.data?.message || error.message));\r\n    }\r\n  };\r\n\r\n  // Render the current step with transition\r\n  const StepComponent = steps[step];\r\n\r\n  return (\r\n    <div className=\"max-w-md mx-auto mt-10 bg-white shadow-xl rounded-2xl p-8\">\r\n      {/* Progress Dots */}\r\n      <div className=\"flex gap-2 justify-center mb-6\">\r\n        {steps.slice(0, -1).map((_, i) => (\r\n          <span\r\n            key={i}\r\n            className={`inline-block w-3 h-3 rounded-full ${i === step ? \"bg-blue-500\" : \"bg-gray-300\"}`}\r\n          ></span>\r\n        ))}\r\n      </div>\r\n      <AnimatePresence mode=\"wait\" initial={false}>\r\n        <motion.div\r\n          key={step}\r\n          initial={{ opacity: 0, x: 40 }}\r\n          animate={{ opacity: 1, x: 0 }}\r\n          exit={{ opacity: 0, x: -40 }}\r\n          transition={{ duration: 0.4 }}\r\n        >\r\n          <StepComponent\r\n            data={data}\r\n            updateData={updates => setData(prev => ({ ...prev, ...updates }))}\r\n            next={() => setStep(step + 1)}\r\n            back={() => setStep(Math.max(0, step - 1))}\r\n            onSubmit={handleSubmit} // Only StepReviewSubmit uses this\r\n          />\r\n        </motion.div>\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}